#Task-1
#Harshita Khudania

#predict the percentage of a student based on the no. of study hours.
#this is a simple linear regression task as it involves just 2 variables.
#what will be the predicted score if a student studies for 9.25 hrs/day?


library(readxl)
SPARKS1 <- read_excel("C:/Users/kapis/OneDrive/Desktop/SPARKS1.xlsx")
View(SPARKS1)


#Display the first few rows of the dataset

head(SPARKS1)


#Plot the data to visualize the relationship between hours and scores

plot(SPARKS1$Hours,SPARKS1$Scores,main="Hours vs Percentage",xlab="Hours Studied",
     ylab="Percentage Score",pch=19,col="red")
abline(lm(SPARKS1$Scores~SPARKS1$Hours,data=SPARKS1),col="seagreen")


#define the feature and target variables

x <- SPARKS1$Hours
y <- SPARKS1$Scores


#Split the data manually into training(80%) and testing sets (20%)

set.seed(123)
sample_size <- floor(0.8 * length(x))
train_indices <- sample(seq_len(length(x)),size=sample_size)
train_x <- x [train_indices]
train_y <- y[train_indices]
test_x <- x[+train_indices]
test_y <- y[+train_indices]


#Train the linear regression model

model<-lm(train_y~train_x)


#print the summary of the model

summary(model)

#make predictions on the test set

predictions<- predict(model,newdata=data.frame(train_x=test_x))


#compare the actual and predicted values

results <- data.frame(Actual=test_y,Predicted=predictions)
print(results)

#calculate the mean absolute error

mae <-mean(abs(results$Actual - results$Predicted))
print(paste("Mean Absolute Error :",mae))

#plot the regression line along with the data points

plot(SPARKS1$Hours,SPARKS1$Scores,main="Hours vs Percentage", xlab="Hours Studies", ylab="Percentage Score",pch=19,col="red")
abline(model,col="seagreen")


#Predict the score for 9.25 hours/day
```{r}
hours<-data.frame(train_x=9.25)
predicted_score<- predict(model,hours)
print(paste("Predicted score for 9.25 hours/day:", predicted_score))
```
